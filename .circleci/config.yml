# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  # The python orb contains a set of prepackaged circleci configuration you can use repeatedly in your configurations files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.2

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  linter:
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          command: flake8
  build-and-test:
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          command: python setup.py install
      - run:
          command: pytest
  deploy-pypi-test:
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: build and upload to test pypi
          command: |
            python -m pip install --upgrade twine
            python -m build
            twine upload --repository testpypi --non-interactive -u __token__ -p $TWINE_TOKEN dist/*
  deploy-pypi:
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: build and upload to pypi
          command: |
            python -m pip install --upgrade twine
            python -m build
            python -m twine upload --non-interactive -u __token__ -p $TWINE_TOKEN dist/*

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  main:
    jobs:
      - linter
      - build-and-test:
          requires:
            - linter
      - deploy-pypi-test:
          requires:
            - build-and-test
          filters:
            tags:
              only: rc-v(\d+)\.(\d+).(\d+)
            branches:
              ignore: master
      - deploy-pypi:
          requires:
            - build-and-test
          filters:
            tags:
              only: v(\d+)\.(\d+).(\d+)
            branches:
              only: master
